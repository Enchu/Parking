-- phpMyAdmin SQL Dump
-- version 4.7.7
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3310
-- Время создания: Июн 10 2021 г., 08:08
-- Версия сервера: 5.6.38
-- Версия PHP: 5.5.38

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `dp`
--

-- --------------------------------------------------------

--
-- Структура таблицы `address`
--

CREATE TABLE `address` (
  `address` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `address`
--

INSERT INTO `address` (`address`) VALUES
('	1-й Ирининский переулок'),
('	1-й Иртышский проезд'),
('	1-й Кабельный проезд'),
('	1-й Кадашёвский переулок'),
('	1-й Казанский просек'),
('	1-й Казачий переулок'),
('	1-й Капотнинский проезд'),
('	1-й Карачаровский проезд'),
('	1-й Кирпичный переулок'),
('	1-й Кожевнический переулок'),
('	1-й Кожуховский проезд'),
('	1-й Колобовский переулок'),
('	1-й Коптельский переулок'),
('	1-й Котельнический переулок'),
('	1-й Котляковский переулок'),
('	1-й Красковский проезд'),
('	1-й Красногвардейский проезд'),
('	1-й Красногорский проезд'),
('	1-й Краснокурсантский проезд'),
('	1-й Красносельский переулок'),
('	1-я Кабельная улица'),
('	1-я Карачаровская улица'),
('	1-я Карпатская улица'),
('	1-я Квесисская улица'),
('	2-й Ирининский переулок'),
('	2-й Иртышский проезд'),
('	2-й Кабельный проезд'),
('	2-й Кадашёвский переулок'),
('	2-й Казанский просек'),
('	2-й Казачий переулок'),
('	2-й Капотнинский проезд'),
('	2-й Карачаровский проезд'),
('	2-й Кожевнический переулок'),
('	2-й Кожуховский проезд'),
('	2-й Колобовский переулок'),
('	2-й Коптельский переулок'),
('	2-й Котельнический переулок'),
('	2-й Котляковский переулок'),
('	2-й Красковский проезд'),
('	2-й Красногвардейский проезд'),
('	2-й Красногорский проезд'),
('	2-й Краснокурсантский проезд'),
('	2-й Красносельский переулок'),
('	2-й Крестовский переулок'),
('	2-я Кабельная улица'),
('	2-я Карачаровская улица'),
('	2-я Карпатская улица'),
('	2-я Квесисская улица'),
('	3-й Ирининский переулок'),
('	3-й Кадашёвский переулок'),
('	3-й Кирпичный переулок'),
('	3-й Кожуховский проезд'),
('	3-й Колобовский переулок'),
('	3-й Котельнический переулок'),
('	3-й Красногорский проезд'),
('	3-й Красносельский переулок'),
('	3-я Кабельная улица'),
('	3-я Карачаровская улица'),
('	3-я Красногвардейская улица'),
('	4-й Кожевнический переулок'),
('	4-й Котельнический переулок'),
('	4-й Красногорский проезд'),
('	4-й Красносельский переулок'),
('	4-я Кабельная улица'),
('	5-й Котельнический переулок'),
('	5-й Красносельский переулок'),
('	5-я Кабельная улица'),
('	5-я Кожуховская улица'),
('	6-й Красносельский переулок'),
('	6-я Кожуховская улица'),
('	7-я Кожуховская улица'),
('	аллея Космонавтов'),
('	аллея Кремлёвских Курсантов'),
('	Большая Калитниковская улица'),
('	Большая Косинская улица'),
('	Большая Сухаревская площадь'),
('	Большой Златоустинский переулок'),
('	Большой Калитниковский проезд'),
('	Большой Кисельный переулок'),
('	Большой Козловский переулок'),
('	Большой Кондратьевский переулок'),
('	Большой Конюшковский переулок'),
('	Большой Коптевский проезд'),
('	Большой Краснопрудный тупик'),
('	бульвар Генерала Карбышева'),
('	Верхняя Красносельская улица'),
('	Долгоруковская улица'),
('	Иркутская улица'),
('	Истринская улица'),
('	Кавказский бульвар'),
('	Кадашёвская набережная'),
('	Кадашёвский тупик'),
('	Казанский переулок'),
('	Казарменный переулок'),
('	Каланчёвская улица'),
('	Каланчёвский тупик'),
('	Калашный переулок'),
('	Калибровская улица'),
('	Калмыков переулок'),
('	Калошин переулок'),
('	Камчатская улица'),
('	Канатчиковский проезд'),
('	Кантемировская улица'),
('	Капельский переулок'),
('	Карамышевская набережная'),
('	Карамышевский проезд'),
('	Карачаровская улица'),
('	Карачаровское шоссе'),
('	Каргопольская улица'),
('	Карелин проезд'),
('	Карельский бульвар'),
('	Карманицкий переулок'),
('	Карьерная улица'),
('	Касимовская улица'),
('	Каскадная улица'),
('	Каспийская улица'),
('	Кастанаевская улица'),
('	Качалинская улица'),
('	Каширский проезд'),
('	Каширское шоссе'),
('	Керамический проезд'),
('	Керченская улица'),
('	Кетчерская улица'),
('	Киевская улица'),
('	Киевское шоссе'),
('	Кировоградская улица'),
('	Кировоградский проезд'),
('	Кирпичная улица'),
('	Кисельный тупик'),
('	Китайгородский проезд'),
('	Кленовый бульвар'),
('	Климентовский переулок'),
('	Клинская улица'),
('	Клинский проезд'),
('	Ключевая улица'),
('	Клязьминская улица'),
('	Княжекозловский переулок'),
('	Княжеская улица'),
('	Ковров переулок'),
('	Ковылинский переулок'),
('	Кожевническая улица'),
('	Кожевнический проезд'),
('	Козицкий переулок'),
('	Козлова улица'),
('	Коктебельская улица'),
('	Коленчатый переулок'),
('	Коллективный проезд'),
('	Колодезная улица'),
('	Колодезный переулок'),
('	Колокольников переулок'),
('	Коломенская набережная'),
('	Коломенская улица'),
('	Коломенский проезд'),
('	Коломенское шоссе'),
('	Колпачный переулок'),
('	Колпинская улица'),
('	Колхозная улица'),
('	Кольская улица'),
('	Комиссариатский переулок'),
('	Коммунарская улица'),
('	Коммунистическая улица'),
('	Коммунистический переулок'),
('	Композиторская улица'),
('	Комсомольская площадь'),
('	Комсомольская улица'),
('	Комсомольский проспект'),
('	Конаковский проезд'),
('	Кондрашёвский тупик'),
('	Конный переулок'),
('	Конюшковская улица'),
('	Кооперативная улица'),
('	Коптевская улица'),
('	Коптевский бульвар'),
('	Копьёвский переулок'),
('	Коренная улица'),
('	Коробейников переулок'),
('	Коровинский проезд'),
('	Коровинское шоссе'),
('	Косинская улица'),
('	Косинская эстакада'),
('	Косинское шоссе'),
('	Костомаровская набережная'),
('	Костомаровский переулок'),
('	Костромская улица'),
('	Костянский переулок'),
('	Котельническая набережная'),
('	Котельный проезд'),
('	Котляковская улица'),
('	Котляковский проезд'),
('	Кочновский проезд'),
('	Крапивенский переулок'),
('	Красковская улица'),
('	Красная площадь'),
('	Красноармейская улица'),
('	Краснобогатырская улица'),
('	Красноворотский проезд'),
('	Красногвардейский бульвар'),
('	Краснодарская улица'),
('	Краснодарский проезд'),
('	Краснодонская улица'),
('	Красноказарменная набережная'),
('	Красноказарменная площадь'),
('	Красноказарменная улица'),
('	Красноказарменный проезд'),
('	Краснокурсантская площадь'),
('	Краснолиманская улица'),
('	Краснополянская улица'),
('	Краснопресненская набережная'),
('	Краснопролетарская улица'),
('	Краснопрудная улица'),
('	Краснопрудный переулок'),
('	Красносельский тупик'),
('	Красносолнечная улица'),
('	Красностуденческий проезд'),
('	Краснохолмская набережная'),
('	Красноярская улица'),
('	Кременчугская улица'),
('	Кремлёвская набережная'),
('	Кремлёвский проезд'),
('	Крестьянская площадь'),
('	Крестьянский тупик'),
('	Кривоарбатский переулок'),
('	Кривоколенный переулок'),
('	Кривоникольский переулок'),
('	Криворожская улица'),
('	Криворожский проезд'),
('	Кронштадтский бульвар'),
('	Кропоткинский переулок'),
('	Крутицкая набережная'),
('	Малая Калитниковская улица'),
('	Малая Калужская улица'),
('	Малая Красносельская улица'),
('	Малая Никитская улица'),
('	Малая Сухаревская площадь'),
('	Малый Златоустинский переулок'),
('	Малый Каковинский переулок'),
('	Малый Калитниковский проезд'),
('	Малый Калужский переулок'),
('	Малый Каретный переулок'),
('	Малый Кисельный переулок'),
('	Малый Козихинский переулок'),
('	Малый Козловский переулок'),
('	Малый Конюшковский переулок'),
('	Малый Коптевский проезд'),
('	Малый Краснопрудный тупик'),
('	Мясницкая улица'),
('	Мясницкий проезд'),
('	Нижний Кисловский переулок'),
('	Нижняя Красносельская улица'),
('	Нижняя Краснохолмская улица'),
('	переулок Капранова'),
('	переулок Красина'),
('	площадь Академика Келдыша'),
('	площадь Амилкара Кабрала'),
('	площадь Викторио Кодовильи'),
('	площадь Киевского Вокзала'),
('	площадь Колумба'),
('	площадь Космонавта Комарова'),
('	площадь Краснопресненская Застава'),
('	площадь Красные Ворота'),
('	площадь Крестьянская Застава'),
('	площадь Мартина Лютера Кинга'),
('	площадь Пречистенские Ворота'),
('	Пречистенская набережная'),
('	проезд Воскресенские Ворота'),
('	проезд Кадомцева'),
('	проезд Карамзина'),
('	проезд Кирова'),
('	проезд Комсомольской Площади'),
('	проезд Кошкина'),
('	Средний Каретный переулок'),
('	Средний Кисловский переулок'),
('	Средний Кондратьевский переулок'),
('	Средняя Калитниковская улица'),
('	Старая Басманная улица'),
('	Суворовская площадь'),
('	Тестовская улица'),
('	улица Академика Капицы'),
('	улица Академика Комарова'),
('	улица Академика Королёва'),
('	улица Александра Солженицына'),
('	улица Большие Каменщики'),
('	улица Василисы Кожиной'),
('	улица Елены Колесовой'),
('	улица Зои и Александра Космодемьянских'),
('	улица Исаковского'),
('	улица Искры'),
('	улица Кадырова'),
('	улица Казакова'),
('	улица Каманина'),
('	улица Камова'),
('	улица Капотня'),
('	улица Каретный Ряд'),
('	улица Карьер'),
('	улица Касаткина'),
('	улица Каховка'),
('	улица Кашёнкин Луг'),
('	улица Кедрова'),
('	улица Кибальчича'),
('	улица Кипренского'),
('	улица Кирпичные Выемки'),
('	улица Климашкина'),
('	улица Клочкова'),
('	улица Княжнина'),
('	улица Кожевнический Вражек'),
('	улица Коккинаки'),
('	улица Колобашкина'),
('	улица Коминтерна'),
('	улица Кондратюка'),
('	улица Конёнкова'),
('	улица Коновалова'),
('	улица Константинова'),
('	улица Корнейчука'),
('	улица Короленко'),
('	улица Космонавтов'),
('	улица Костикова'),
('	улица Костякова'),
('	улица Косыгина'),
('	улица Коцюбинского'),
('	улица Кошкина'),
('	улица Коштоянца'),
('	улица Кравченко'),
('	улица Крамского'),
('	улица Красина'),
('	улица Красная Пресня'),
('	улица Красная Сосна'),
('	улица Красного Маяка'),
('	улица Красный Казанец'),
('	улица Красных Зорь'),
('	улица Кренкеля'),
('	улица Кржижановского'),
('	улица Крупской'),
('	улица Малые Каменщики'),
('	улица Маршала Катукова'),
('	улица Маршала Кожедуба'),
('	улица Маршала Конева'),
('	улица Наташи Качуевской'),
('	улица Наташи Ковшовой'),
('	улица Николая Коперника'),
('	улица Павла Корчагина'),
('	улица Пречистенка'),
('	улица Сергея Капицы'),
('	улица Софьи Ковалевской'),
('	улица Станиславского'),
('1-й Кабельный проезд'),
('1-й Кадашёвский переулок'),
('1-й Казанский просек'),
('1-й Казачий переулок'),
('1-й Капотнинский проезд'),
('1-й Карачаровский проезд'),
('1-й Кирпичный переулок'),
('1-й Кожевнический переулок'),
('1-й Кожуховский проезд'),
('1-й Колобовский переулок'),
('1-й Коптельский переулок'),
('1-й Котельнический переулок'),
('1-й Котляковский переулок'),
('1-й Красковский проезд'),
('1-й Красногвардейский проезд'),
('1-й Красногорский проезд'),
('1-й Краснокурсантский проезд'),
('1-й Красносельский переулок'),
('1-й Крутицкий переулок'),
('1-й Курьяновский проезд'),
('1-й Обыденский переулок'),
('1-я Кабельная улица'),
('1-я Карачаровская улица'),
('1-я Карпатская улица'),
('1-я Квесисская улица'),
('1-я Крылатская улица'),
('1-я Курьяновская улица'),
('1-я улица Лазенки'),
('2-й Кабельный проезд'),
('2-й Кадашёвский переулок'),
('2-й Казанский просек'),
('2-й Казачий переулок'),
('2-й Капотнинский проезд'),
('2-й Карачаровский проезд'),
('2-й Кожевнический переулок'),
('2-й Кожуховский проезд'),
('2-й Колобовский переулок'),
('2-й Коптельский переулок'),
('2-й Котельнический переулок'),
('2-й Котляковский переулок'),
('2-й Красковский проезд'),
('2-й Красногвардейский проезд'),
('2-й Красногорский проезд'),
('2-й Краснокурсантский проезд'),
('2-й Красносельский переулок'),
('2-й Крестовский переулок'),
('2-й Крутицкий переулок'),
('2-й Курьяновский проезд'),
('2-я Кабельная улица'),
('2-я Карачаровская улица'),
('2-я Карпатская улица'),
('2-я Квесисская улица'),
('2-я Крылатская улица'),
('2-я Курьяновская улица'),
('2-я улица Лазенки'),
('3-й Кадашёвский переулок'),
('3-й Кирпичный переулок'),
('3-й Кожуховский проезд'),
('3-й Колобовский переулок'),
('3-й Котельнический переулок'),
('3-й Красногорский проезд'),
('3-й Красносельский переулок'),
('3-й Крутицкий переулок'),
('3-я Кабельная улица'),
('3-я Карачаровская улица'),
('3-я Красногвардейская улица'),
('3-я Курьяновская улица'),
('3-я улица Лазенки'),
('4-й Кожевнический переулок'),
('4-й Котельнический переулок'),
('4-й Красногорский проезд'),
('4-й Красносельский переулок'),
('4-й Крутицкий переулок'),
('4-я Кабельная улица'),
('4-я Курьяновская улица'),
('4-я улица Лазенки'),
('5-й Котельнический переулок'),
('5-й Красносельский переулок'),
('5-я Кабельная улица'),
('5-я Кожуховская улица'),
('5-я Курьяновская улица'),
('5-я улица Лазенки'),
('6-й Красносельский переулок'),
('6-я Кожуховская улица'),
('6-я улица Лазенки'),
('7-я Кожуховская улица'),
('7-я улица Лазенки'),
('аллея Космонавтов'),
('аллея Кремлёвских Курсантов'),
('Биржевая площадь'),
('Богоявленский переулок'),
('Большая Калитниковская улица'),
('Большая Косинская улица'),
('Большая почтовая'),
('Большая почтовая д.51'),
('Большая Сухаревская площадь'),
('Большой Златоустинский переулок'),
('Большой Калитниковский проезд'),
('Большой Кисельный переулок'),
('Большой Козловский переулок'),
('Большой Кондратьевский переулок'),
('Большой Конюшковский переулок'),
('Большой Коптевский проезд'),
('Большой Краснопрудный тупик'),
('Большой Купавенский проезд'),
('бульвар Генерала Карбышева'),
('Верхняя Красносельская улица'),
('Долгоруковская улица'),
('Иркутская улица'),
('Истринская улица'),
('Кавказский бульвар'),
('Кадашёвская набережная'),
('Кадашёвский тупик'),
('Казанский переулок'),
('Казарменный переулок'),
('Каланчёвская улица'),
('Каланчёвский тупик'),
('Калашный переулок'),
('Калибровская улица'),
('Калмыков переулок'),
('Калошин переулок'),
('Камчатская улица'),
('Канатчиковский проезд'),
('Кантемировская улица'),
('Капельский переулок'),
('Карамышевская набережная'),
('Карамышевский проезд'),
('Карачаровская улица'),
('Карачаровское шоссе'),
('Каргопольская улица'),
('Карелин проезд'),
('Карельский бульвар'),
('Карманицкий переулок'),
('Карьерная улица'),
('Касимовская улица'),
('Каскадная улица'),
('Каспийская улица'),
('Кастанаевская улица'),
('Качалинская улица'),
('Каширский проезд'),
('Каширское шоссе'),
('Керамический проезд'),
('Керченская улица'),
('Кетчерская улица'),
('Киевская улица'),
('Киевское шоссе'),
('Кировоградская улица'),
('Кировоградский проезд'),
('Кирпичная улица'),
('Кисельный тупик'),
('Китайгородский проезд'),
('Кленовый бульвар'),
('Климентовский переулок'),
('Клинская улица'),
('Клинский проезд'),
('Ключевая улица'),
('Клязьминская улица'),
('Княжекозловский переулок'),
('Княжеская улица'),
('Ковров переулок'),
('Ковылинский переулок'),
('Кожевническая улица'),
('Кожевнический проезд'),
('Козицкий переулок'),
('Козлова улица'),
('Коктебельская улица'),
('Коленчатый переулок'),
('Коллективный проезд'),
('Колодезная улица'),
('Колодезный переулок'),
('Колокольников переулок'),
('Коломенская набережная'),
('Коломенская улица'),
('Коломенский проезд'),
('Коломенское шоссе'),
('Колпачный переулок'),
('Колпинская улица'),
('Колхозная улица'),
('Кольская улица'),
('Комиссариатский переулок'),
('Коммунарская улица'),
('Коммунистическая улица'),
('Коммунистический переулок'),
('Композиторская улица'),
('Комсомольская площадь'),
('Комсомольская улица'),
('Комсомольский проспект'),
('Конаковский проезд'),
('Кондрашёвский тупик'),
('Конный переулок'),
('Конюшковская улица'),
('Кооперативная улица'),
('Коптевская улица'),
('Коптевский бульвар'),
('Копьёвский переулок'),
('Коренная улица'),
('Коробейников переулок'),
('Коровинский проезд'),
('Коровинское шоссе'),
('Косинская улица'),
('Косинская эстакада'),
('Косинское шоссе'),
('Костомаровская набережная'),
('Костомаровский переулок'),
('Костромская улица'),
('Костянский переулок'),
('Котельническая набережная'),
('Котельный проезд'),
('Котляковская улица'),
('Котляковский проезд'),
('Кочновский проезд'),
('Крапивенский переулок'),
('Красковская улица'),
('Красная площадь'),
('Красноармейская улица'),
('Краснобогатырская улица'),
('Красноворотский проезд'),
('Красногвардейский бульвар'),
('Краснодарская улица'),
('Краснодарский проезд'),
('Краснодонская улица'),
('Красноказарменная набережная'),
('Красноказарменная площадь'),
('Красноказарменная улица'),
('Красноказарменный проезд'),
('Краснокурсантская площадь'),
('Краснолиманская улица'),
('Краснополянская улица'),
('Краснопресненская набережная'),
('Краснопролетарская улица'),
('Краснопрудная улица'),
('Краснопрудный переулок'),
('Красносельский тупик'),
('Красносолнечная улица'),
('Красностуденческий проезд'),
('Краснохолмская набережная'),
('Красноярская улица'),
('Кременчугская улица'),
('Кремлёвская набережная'),
('Кремлёвский проезд'),
('Крестьянская площадь'),
('Крестьянский тупик'),
('Кривоарбатский переулок'),
('Кривоколенный переулок'),
('Кривоникольский переулок'),
('Криворожская улица'),
('Криворожский проезд'),
('Кронштадтский бульвар'),
('Кропоткинский переулок'),
('Крутицкая набережная'),
('Крутицкая улица'),
('Крылатская улица'),
('Крымская набережная'),
('Крымская площадь'),
('Крымский проезд'),
('Крымский тупик'),
('Крюковская площадь'),
('Крюковская улица'),
('Крюковский тупик'),
('Ксеньинский переулок'),
('Кубанская улица'),
('Кудринский переулок'),
('Кузнецовская улица'),
('Кузнечный тупик'),
('Кузьминская улица'),
('Кулаков переулок'),
('Куликовская улица'),
('Кунцевская улица'),
('Курганская улица'),
('Куркинское шоссе'),
('Курская улица'),
('Курсовой переулок'),
('Курьяновский бульвар'),
('Кусковская улица'),
('Кусковский просек'),
('Кусковский тупик'),
('Кустанайская улица'),
('Кутузовский переулок'),
('Кутузовский проезд'),
('Кутузовский проспект'),
('Кучин переулок'),
('Лавров переулок'),
('Лаврский переулок'),
('Лаврушинский переулок'),
('Ладожская улица'),
('Лазаревский переулок'),
('Лазоревый проезд'),
('Ландышевая улица'),
('Ланинский переулок'),
('Лебедянская улица'),
('Лебяжий переулок'),
('Левобережная улица'),
('Левый тупик'),
('Ленинградский проспект'),
('Ленинградское шоссе'),
('Малая Калитниковская улица'),
('Малая Калужская улица'),
('Малая Красносельская улица'),
('Малая Никитская улица'),
('Малая Сухаревская площадь'),
('Малый Златоустинский переулок'),
('Малый Каковинский переулок'),
('Малый Калитниковский проезд'),
('Малый Калужский переулок'),
('Малый Каретный переулок'),
('Малый Кисельный переулок'),
('Малый Козихинский переулок'),
('Малый Козловский переулок'),
('Малый Конюшковский переулок'),
('Малый Коптевский проезд'),
('Малый Краснопрудный тупик'),
('Малый Купавенский проезд'),
('Малый Лёвшинский переулок'),
('Мясницкая улица'),
('Мясницкий проезд'),
('Нижний Кисловский переулок'),
('Нижняя Красносельская улица'),
('Нижняя Краснохолмская улица'),
('переулок Капранова'),
('переулок Красина'),
('площадь Академика Келдыша'),
('площадь Академика Курчатова'),
('площадь Амилкара Кабрала'),
('площадь Белы Куна'),
('площадь Викторио Кодовильи'),
('площадь Киевского Вокзала'),
('площадь Колумба'),
('площадь Космонавта Комарова'),
('площадь Краснопресненская Застава'),
('площадь Красные Ворота'),
('площадь Крестьянская Застава'),
('площадь Курского Вокзала'),
('площадь Ле Зуана'),
('площадь Мартина Лютера Кинга'),
('площадь Пречистенские Ворота'),
('площадь Цезаря Куникова'),
('Пречистенская набережная'),
('проезд Воскресенские Ворота'),
('проезд Кадомцева'),
('проезд Карамзина'),
('проезд Кирова'),
('проезд Комсомольской Площади'),
('проезд Кошкина'),
('Средний Каретный переулок'),
('Средний Кисловский переулок'),
('Средний Кондратьевский переулок'),
('Средняя Калитниковская улица'),
('Старая Басманная улица'),
('Суворовская площадь'),
('Тестовская улица'),
('улица Адмирала Лазарева'),
('улица Академика Капицы'),
('улица Академика Комарова'),
('улица Академика Королёва'),
('улица Академика Курчатова'),
('улица Александра Солженицына'),
('улица Большие Каменщики'),
('улица Василисы Кожиной'),
('улица Герасима Курина'),
('улица Елены Колесовой'),
('улица Зои и Александра Космодемьянских'),
('улица Ильинка'),
('улица Ирины Левченко'),
('улица Исаковского'),
('улица Искры'),
('улица Кадырова'),
('улица Казакова'),
('улица Каманина'),
('улица Камова'),
('улица Капотня'),
('улица Каретный Ряд'),
('улица Карьер'),
('улица Касаткина'),
('улица Каховка'),
('улица Кашёнкин Луг'),
('улица Кедрова'),
('улица Кибальчича'),
('улица Кипренского'),
('улица Кирпичные Выемки'),
('улица Климашкина'),
('улица Клочкова'),
('улица Княжнина'),
('улица Кожевнический Вражек'),
('улица Коккинаки'),
('улица Колобашкина'),
('улица Коминтерна'),
('улица Кондратюка'),
('улица Конёнкова'),
('улица Коновалова'),
('улица Константинова'),
('улица Корнейчука'),
('улица Короленко'),
('улица Космонавтов'),
('улица Костикова'),
('улица Костякова'),
('улица Косыгина'),
('улица Коцюбинского'),
('улица Кошкина'),
('улица Коштоянца'),
('улица Кравченко'),
('улица Крамского'),
('улица Красина'),
('улица Красная Пресня'),
('улица Красная Сосна'),
('улица Красного Маяка'),
('улица Красный Казанец'),
('улица Красных Зорь'),
('улица Кренкеля'),
('улица Кржижановского'),
('улица Крупской'),
('улица Крутицкий Вал'),
('улица Крылатские Холмы'),
('улица Крымский Вал'),
('улица Кубинка'),
('улица Кузнецкий Мост'),
('улица Кузнецова'),
('улица Кулакова'),
('улица Кульнева'),
('улица Кутузова'),
('улица Куусинена'),
('улица Кухмистерова'),
('улица Лавочкина'),
('улица Лазо'),
('улица Лапина'),
('улица Лебедева'),
('улица Леваневского'),
('улица Левитана'),
('улица Ленивка'),
('улица Ленина'),
('улица Малые Каменщики'),
('улица Маршала Катукова'),
('улица Маршала Кожедуба'),
('улица Маршала Конева'),
('улица Наташи Качуевской'),
('улица Наташи Ковшовой'),
('улица Николая Коперника'),
('улица Павла Корчагина'),
('улица Пречистенка'),
('улица Сергея Капицы'),
('улица Софьи Ковалевской'),
('улица Станиславского'),
('Фридриха Энгельса'),
('Фридриха Энгельса д70');

-- --------------------------------------------------------

--
-- Структура таблицы `building`
--

CREATE TABLE `building` (
  `id` int(10) NOT NULL,
  `building` varchar(50) NOT NULL,
  `address` varchar(100) NOT NULL,
  `number_quant` varchar(50) NOT NULL,
  `chema` blob
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `building`
--

INSERT INTO `building` (`id`, `building`, `address`, `number_quant`, `chema`) VALUES
(1, 'ТЦ Арфей', 'Большая почтовая д.51', '1000', ),
(2, 'ТЦ Благо', 'Фридриха Энгельса д70', '700', NULL),
(3, 'ТД \"Паркверк\"', '1-й Кадашёвский переулок', '1000', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `customer`
--

CREATE TABLE `customer` (
  `Email` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `First_name` varchar(50) NOT NULL,
  `Last_name` varchar(50) NOT NULL,
  `Patronomyc` varchar(50) NOT NULL,
  `Phone` varchar(50) NOT NULL,
  `Gender` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `customer`
--

INSERT INTO `customer` (`Email`, `Password`, `First_name`, `Last_name`, `Patronomyc`, `Phone`, `Gender`) VALUES
('ellappeber-8283@yopmail.com', 'TNW4AN', 'Грибоедов', 'Адольф', 'Сергеевич', '71906773462', 'Мужской'),
('ellapwwe-283@yopmail.com', 'ivTOoN', 'Анатолий', 'Василий', 'Васильевич', '71904233432', 'Мужской'),
('mejudizerre-3461@mail.com', 'hF6ubX6GpN7AR8UM', 'Ершова', 'Береслава', 'Кимовна', '74950182248', 'Женский'),
('otimmulla-5324@mail.com', 'r9yBZbZxc7M3qsmZ', 'Лазарев', 'Прохор', 'Кимович', '74958480929', 'Мужской'),
('pyqedissymmo-0258@mail.com', 'HAyp7VSHbDdr7KeD', 'Ермакова', 'Снежана', 'Созоновна', '74955794092', 'Мужской'),
('tajessoxan-0166@mail.com', 'p5aVA33stvFAqm3C', 'Васильева', 'Ляля', 'Владиславовна', '74952601009', 'Женский'),
('ygoppellare-4534@mail.com', 'UySSjjj88n9RaVUh', 'Семёнова', 'Элизабет', 'Донатовна', '74950406539', 'Женский'),
('zannonexip-1033@mail.com', 'GS9gvpQYyQ2ATK6E', 'Меркушев', 'Болеслав', 'Глебович', '74959965940', 'Мужской'),
('zegasonna-8314@mail.com', 'mQCvia8QUjT2dsaE', 'Комиссарова', 'Иоланта', 'Максовна', '74950122515', 'Женский');

-- --------------------------------------------------------

--
-- Структура таблицы `gender`
--

CREATE TABLE `gender` (
  `gender` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `gender`
--

INSERT INTO `gender` (`gender`) VALUES
('Женский'),
('Мужской');

-- --------------------------------------------------------

--
-- Структура таблицы `parking`
--

CREATE TABLE `parking` (
  `id` int(10) NOT NULL,
  `datestart` datetime NOT NULL,
  `dataend` datetime NOT NULL,
  `customer` varchar(50) NOT NULL,
  `sector` varchar(50) DEFAULT NULL,
  `building` varchar(50) NOT NULL,
  `price` int(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `parking`
--

INSERT INTO `parking` (`id`, `datestart`, `dataend`, `customer`, `sector`, `building`, `price`) VALUES
(1, '2021-06-01 09:00:00', '2021-06-08 10:00:00', 'ellappeber-8283@yopmail.com', 'А1', 'ТЦ Арфей', 1000),
(2, '2021-06-09 09:00:00', '2021-06-09 10:00:00', 'ellapwwe-283@yopmail.com', NULL, 'ТЦ Арфей', 375),
(11, '2021-06-09 08:00:00', '2021-06-09 09:00:00', 'otimmulla-5324@mail.com', NULL, 'ТЦ Благо', 1500),
(12, '2021-06-08 15:00:00', '2021-06-10 10:00:00', 'pyqedissymmo-0258@mail.com', NULL, 'ТЦ Арфей', 1000),
(13, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'pyqedissymmo-0258@mail.com', NULL, 'ТД \"Паркверк\"', 360),
(14, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'pyqedissymmo-0258@mail.com', NULL, 'ТД \"Паркверк\"', 360),
(15, '2021-06-09 19:04:26', '2021-06-10 19:04:26', 'pyqedissymmo-0258@mail.com', NULL, 'ТД \"Паркверк\"', 360),
(16, '2021-06-09 19:04:26', '2021-06-10 19:04:26', 'pyqedissymmo-0258@mail.com', NULL, 'ТД \"Паркверк\"', 360),
(17, '2021-06-09 19:04:26', '2021-06-11 19:04:26', 'tajessoxan-0166@mail.com', 'А1', 'ТД \"Паркверк\"', 720);

-- --------------------------------------------------------

--
-- Структура таблицы `role`
--

CREATE TABLE `role` (
  `role` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `role`
--

INSERT INTO `role` (`role`) VALUES
('Администратор'),
('Директор'),
('Менеджер');

-- --------------------------------------------------------

--
-- Структура таблицы `sector`
--

CREATE TABLE `sector` (
  `sector` varchar(50) NOT NULL,
  `floor` varchar(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `sector`
--

INSERT INTO `sector` (`sector`, `floor`) VALUES
('A10', '1'),
('A11', '1'),
('A12', '1'),
('A13', '1'),
('A14', '1'),
('A15', '1'),
('A16', '1'),
('A17', '1'),
('A18', '1'),
('A19', '1'),
('A2', '1'),
('A20', '1'),
('A3', '1'),
('A4', '1'),
('A5', '1'),
('A6', '1'),
('A7', '1'),
('A8', '1'),
('A9', '1'),
('B1', '2'),
('B10', '2'),
('B11', '2'),
('B12', '2'),
('B13', '2'),
('B14', '2'),
('B15', '2'),
('B16', '2'),
('B17', '2'),
('B18', '2'),
('B19', '2'),
('B2', '2'),
('B20', '2'),
('B3', '2'),
('B4', '2'),
('B5', '2'),
('B6', '2'),
('B7', '2'),
('B8', '2'),
('B9', '2'),
('C1', '3'),
('C10', '3'),
('C11', '3'),
('C12', '3'),
('C13', '3'),
('C14', '3'),
('C15', '3'),
('C16', '3'),
('C17', '3'),
('C18', '3'),
('C19', '3'),
('C2', '3'),
('C20', '3'),
('C3', '3'),
('C4', '3'),
('C5', '3'),
('C6', '3'),
('C7', '3'),
('C8', '3'),
('C9', '3'),
('А1', '1');

-- --------------------------------------------------------

--
-- Структура таблицы `staff`
--

CREATE TABLE `staff` (
  `Email` varchar(45) NOT NULL,
  `Password` varchar(45) NOT NULL,
  `First_name` varchar(50) NOT NULL,
  `Last_name` varchar(50) NOT NULL,
  `Patronomyc` varchar(50) NOT NULL,
  `Phone` varchar(50) NOT NULL,
  `Status` varchar(30) NOT NULL,
  `Role` varchar(40) NOT NULL,
  `Gender` varchar(45) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `staff`
--

INSERT INTO `staff` (`Email`, `Password`, `First_name`, `Last_name`, `Patronomyc`, `Phone`, `Status`, `Role`, `Gender`) VALUES
('1', '1', 'Елена', 'Макарова', 'Балакирова', '71906773462', 'Работает', 'Администратор', 'Женский'),
('2', '2', 'Янукович', 'Рихард', 'Валентинович', '76594042233', 'Работает', 'Менеджер', 'Мужской'),
('agocylled-1276@mail.com', 'Quericel', 'Зыков', 'Терентий', 'Робертович', '74958341253', 'Работает', 'Администратор', 'Мужской'),
('bit.anton@mail.com', 'Quericel', 'Антон', 'Бычонков', 'Сергеевич', '792452432424', 'Работает', 'Администратор', 'Мужской'),
('ebiramynn-1502@yopmail.com', 'QGywds', 'Воронов', 'Георгий', 'Прохорович', '76346601969', 'Работает', 'Менеджер', 'Мужской'),
('ellappeber-8283@yopmail.com', 'ivTOog', 'Грибоедов', 'Адольф', 'Сергеевич', '71906773462', 'Работает', 'Администратор', 'Мужской'),
('gikeveconna-7083@yopmail.com', '6hX7fM', 'Сеченов', 'Ильхам', 'Юльевич', '75239421318', 'Работает', 'Менеджер', 'Мужской'),
('ivisedde-0233@yopmail.com', 'l5J733', 'Цветков', 'Фанис', 'Никитич', '71915592336', 'Работает', 'Менеджер', 'Мужской'),
('monologues@jenachouse.co', 'ZXoPBFX7oLzk87Uu', 'Буров', 'Ефрем', 'Сергеевич', '74958810215', 'Работает', 'Менеджер', 'Мужской'),
('mupugyrate-3342@mail.com', 'ETKrF9jvNzY6LsaY', 'Комиссаров', 'Ефим', 'Митрофанович', '74950568602', 'Работает', 'Менеджер', 'Мужской');

-- --------------------------------------------------------

--
-- Структура таблицы `status`
--

CREATE TABLE `status` (
  `status` varchar(50) NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `status`
--

INSERT INTO `status` (`status`) VALUES
('Работает'),
('Удален');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `address`
--
ALTER TABLE `address`
  ADD PRIMARY KEY (`address`);

--
-- Индексы таблицы `building`
--
ALTER TABLE `building`
  ADD PRIMARY KEY (`id`),
  ADD KEY `address` (`address`),
  ADD KEY `building` (`building`);

--
-- Индексы таблицы `customer`
--
ALTER TABLE `customer`
  ADD PRIMARY KEY (`Email`),
  ADD KEY `Gender` (`Gender`);

--
-- Индексы таблицы `gender`
--
ALTER TABLE `gender`
  ADD PRIMARY KEY (`gender`);

--
-- Индексы таблицы `parking`
--
ALTER TABLE `parking`
  ADD PRIMARY KEY (`id`),
  ADD KEY `owner` (`customer`),
  ADD KEY `sector` (`sector`),
  ADD KEY `building` (`building`);

--
-- Индексы таблицы `role`
--
ALTER TABLE `role`
  ADD PRIMARY KEY (`role`);

--
-- Индексы таблицы `sector`
--
ALTER TABLE `sector`
  ADD PRIMARY KEY (`sector`);

--
-- Индексы таблицы `staff`
--
ALTER TABLE `staff`
  ADD PRIMARY KEY (`Email`),
  ADD KEY `Status` (`Status`,`Role`),
  ADD KEY `Role` (`Role`),
  ADD KEY `gender` (`Gender`);

--
-- Индексы таблицы `status`
--
ALTER TABLE `status`
  ADD PRIMARY KEY (`status`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `building`
--
ALTER TABLE `building`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT для таблицы `parking`
--
ALTER TABLE `parking`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `building`
--
ALTER TABLE `building`
  ADD CONSTRAINT `building_ibfk_1` FOREIGN KEY (`address`) REFERENCES `address` (`address`);

--
-- Ограничения внешнего ключа таблицы `customer`
--
ALTER TABLE `customer`
  ADD CONSTRAINT `customer_ibfk_1` FOREIGN KEY (`Gender`) REFERENCES `gender` (`gender`);

--
-- Ограничения внешнего ключа таблицы `parking`
--
ALTER TABLE `parking`
  ADD CONSTRAINT `parking_ibfk_3` FOREIGN KEY (`sector`) REFERENCES `sector` (`sector`),
  ADD CONSTRAINT `parking_ibfk_4` FOREIGN KEY (`building`) REFERENCES `building` (`building`),
  ADD CONSTRAINT `parking_ibfk_5` FOREIGN KEY (`customer`) REFERENCES `customer` (`Email`);

--
-- Ограничения внешнего ключа таблицы `staff`
--
ALTER TABLE `staff`
  ADD CONSTRAINT `staff_ibfk_1` FOREIGN KEY (`Status`) REFERENCES `status` (`status`),
  ADD CONSTRAINT `staff_ibfk_2` FOREIGN KEY (`Role`) REFERENCES `role` (`role`),
  ADD CONSTRAINT `staff_ibfk_3` FOREIGN KEY (`Gender`) REFERENCES `gender` (`gender`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
